//-----------------------------------------------------------------------
// <copyright file="ISmartDetectorRunner.cs" company="Microsoft Corporation">
// Copyright (c) Microsoft Corporation. All rights reserved.
// </copyright>
//-----------------------------------------------------------------------

namespace Microsoft.Azure.Monitoring.SmartDetectors.MonitoringAppliance.Analysis
{
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Azure.Monitoring.SmartDetectors.RuntimeEnvironment.Contracts;

    /// <summary>
    /// An interface for running a Smart Detector
    /// </summary>
    public interface ISmartDetectorRunner
    {
        /// <summary>
        /// Runs the Smart Detector's analysis flow.
        /// </summary>
        /// <param name="request">The Smart Detector analysis request.</param>
        /// <param name="shouldDetectorTrace">Determines if the detector's traces are emitted.</param>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>A <see cref="Task{TResult}"/>, returning the list of Alerts generated by the Smart Detector.</returns>
        Task<List<Alert>> AnalyzeAsync(SmartDetectorAnalysisRequest request, bool shouldDetectorTrace, CancellationToken cancellationToken);

        /// <summary>
        /// Runs the Smart Detector's resolution check flow.
        /// </summary>
        /// <param name="request">The alert resolution check request.</param>
        /// <param name="shouldDetectorTrace">Determines if the detector's traces are emitted.</param>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>A <see cref="Task{TResult}"/>, returning the resolution check response generated by the Smart Detector.</returns>
        Task<AlertResolutionCheckResponse> CheckResolutionAsync(AlertResolutionCheckRequest request, bool shouldDetectorTrace, CancellationToken cancellationToken);
    }
}