{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "defaultResourceLocation": {
      "type": "string",
      "allowedValues": [
        "East Asia",
        "Southeast Asia",
        "Central US",
        "East US",
        "East US 2",
        "West US",
        "North Central US",
        "South Central US",
        "North Europe",
        "West Europe",
        "Japan West",
        "Japan East",
        "Brazil South",
        "Australia East",
        "Australia Southeast",
        "Central India",
        "West India",
        "South India",
        "Canada Central",
        "Canada East",
        "West Central US",
        "West US 2",
        "UK South",
        "UK West",
        "Korea Central",
        "Korea South"
      ]
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ]
    },
    "functionsAppName": { "type": "string" },
    "functionsHostingPlanName": { "type": "string" },
    "functionsLogsStorageAccountName": { "type": "string" },
    "storageAccountName": { "type": "string" },
    "applicationInsightsName": { "type": "string" },
    "logVerboseTraces": {
      "type": "string",
      "defaultValue": "true"
    }
  },
  "variables": {
    "functionsLogsStorageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', parameters('functionsLogsStorageAccountName'))]",
    "storageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
    "resourceGroupName": "[resourceGroup().name]",
    "functionBaseUrl": "[concat('https://', parameters('functionsAppName'), '.azurewebsites.net')]"
  },
  "resources": [
    {
      "apiVersion": "2014-04-01",
      "name": "[parameters('applicationInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('defaultResourceLocation')]",
      "properties": {
        "ApplicationId": "[parameters('applicationInsightsName')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('defaultResourceLocation')]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('functionsLogsStorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('defaultResourceLocation')]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[parameters('functionsHostingPlanName')]",
      "location": "[parameters('defaultResourceLocation')]",
      "properties": {
        "name": "[parameters('functionsHostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('functionsAppName')]",
      "location": "[parameters('defaultResourceLocation')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('functionsHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('functionsLogsStorageAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionsHostingPlanName'))]",
        "siteConfig": {
          "use32BitWorkerProcess": false,
          "siteAuthEnabled": true
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "appsettings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('functionsAppName'))]"
          ],
          "tags": {
            "displayName": "appsettings"
          },
          "properties": {
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('functionsLogsStorageAccountName'), ';AccountKey=', listKeys(variables('functionsLogsStorageAccountId'),'2015-05-01-preview').key1)]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('functionsLogsStorageAccountName'), ';AccountKey=', listKeys(variables('functionsLogsStorageAccountId'),'2015-05-01-preview').key1)]",
            "FUNCTIONS_EXTENSION_VERSION": "~1",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('functionsLogsStorageAccountName'), ';AccountKey=', listKeys(variables('functionsLogsStorageAccountId'),'2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTSHARE": "[toLower(parameters('functionsAppName'))]",
            "SendVerboseTracesToAI": "[parameters('logVerboseTraces')]",
            "TelemetryInstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2014-04-01').InstrumentationKey]",
            "ResourceGroupName": "[variables('resourceGroupName')]",
            "SubscriptionId": "[subscription().subscriptionId]",
            "FunctionBaseUrl": "[variables('functionBaseUrl')]",
            "StorageAccountName": "[parameters('storageAccountName')]",
            "AnalyticsQueryTimeoutInMinutes": "15"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('functionsAppName'))]",
            "[resourceId('Microsoft.Web/sites/config', parameters('functionsAppName'), 'appsettings')]"
          ],
          "tags": {
            "displayName": "connectionstrings"
          },
          "properties": {
            "StorageConnectionString": {
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]",
              "type": "Custom"
            }
          }
        }
      ]
    }
  ]
}
